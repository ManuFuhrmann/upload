name: PHP CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      DISCORD_BLAME_WEBHOOK_URL: ${{ secrets.DISCORD_BLAME_WEBHOOK_URL }}
      DISCORD_PROJECT_WEBHOOK_URL: ${{ secrets.DISCORD_PROJECT_WEBHOOK_URL }}
      SFTP_HOST: ${{ secrets.SFTP_HOST }}
      SFTP_USER: ${{ secrets.SFTP_USER }}
      SFTP_PASSWORD: ${{ secrets.SFTP_PASSWORD }}
      SFTP_REMOTE_DIR: ${{ secrets.SFTP_REMOTE_DIR }}
      FAILED_STEP: ""

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      env:
        FAILED_STEP: "Checkout code"

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3' # specify your PHP version
        tools: composer
      env:
        FAILED_STEP: "Set up PHP"

    - name: Install dependencies
      run: composer install --no-progress --no-suggest
      env:
        FAILED_STEP: "Install dependencies"

    - name: Generate SCSS files
      run: |
        npm install -g sass # Assuming you're using the Dart Sass implementation
        sass assets/scss:public/css --style compressed
      env:
        FAILED_STEP: "Generate SCSS files"

    - name: Run PHPUnit tests
      run: vendor/bin/phpunit
      env:
        FAILED_STEP: "Run PHPUnit tests"

    - name: Run PHPStan
      run: vendor/bin/phpstan analyse src
      env:
        FAILED_STEP: "Run PHPStan"

    - name: Deploy to server via SFTP
      if: success()
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ env.SFTP_HOST }}
        username: ${{ env.SFTP_USER }}
        password: ${{ env.SFTP_PASSWORD }}
        source: "./*,.git*,node_modules,tests,composer.*,phpunit.xml"
        rm: true
        target: ${{ env.SFTP_REMOTE_DIR }}
      env:
        FAILED_STEP: "Deploy to server via SFTP"

    - name: Check for failure
      if: failure()
      run: |
        ACTOR=${{ github.actor }}
        STEP=${{ env.FAILED_STEP }}
        curl -H "Content-Type: application/json" -X POST -d "{\"content\": \"CI/CD pipeline failed at step: $STEP. Blame @$ACTOR!\"}" $DISCORD_BLAME_WEBHOOK_URL

    - name: Send success message to Discord
      if: success()
      run: |
        curl -H "Content-Type: application/json" -X POST -d '{"content": "CI/CD pipeline succeeded. Great job team!"}' $DISCORD_PROJECT_WEBHOOK_URL
